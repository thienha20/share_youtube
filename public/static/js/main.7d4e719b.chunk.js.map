{"version":3,"sources":["hooks/useNotifer.js","layout/ui-component/Loader.js","layout/ui-component/Loadable.js","routes/MainRoutes.js","routes/AuthenticationRoutes.js","routes/index.js","App.js","reportWebVitals.js","store/reducers/commonsReducer.js","store/reducers/usersReducer.js","store/reducers/shareReducer.js","store/reducers/index.js","store/reducer.js","store/index.js","index.js","store/constant.js","store/ajax.js","store/types/commons.js","store/types/users.js","store/types/shares.js","store/types/index.js","store/actions/commons.js","store/actions/users.js","store/actions/shares.js","store/actions/index.js","utils/url.js"],"names":["displayed","useNotifier","dispatch","useDispatch","notifications","useSelector","state","commons","useSnackbar","enqueueSnackbar","closeSnackbar","React","forEach","id","key","message","options","anchorOrigin","vertical","horizontal","dismissed","includes","onClose","event","reason","myKey","onExited","allActions","closeMessage","filter","useStyles","makeStyles","theme","root","position","top","left","zIndex","width","marginTop","Loader","classes","className","LinearProgress","color","Loadable","Component","props","fallback","Login","lazy","Page404","Page500","MainRoutes","path","title","component","AuthenticationRoutes","routes","App","pageRoutes","map","route","i","exact","name","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","commonsReducer","action","type","actionTypes","OPEN_LOADING","CLOSE_LOADING","SHOW_MESSAGE","ms","concat","payload","REMOVE_MESSAGE","currentUser","isLoggingIn","persistConfig","storage","blacklist","persistReducer","USER_LOGIN","user_id","USER_REGISTER","USER_LOGOUT","USER_ME","INITIAL_STATE","data","params","page","sort","timestamp","startParams","ShareReducer","SHARE_ADD","SHARE_START","SHARE_VIDEO_LISTING","SHARE_PARAMS","history","par","total","push","search","convertParams","reducers","users","usersReducer","shares","shareReducer","reducer","combineReducers","customizationReducer","stateReconciler","autoMergeLevel2","whitelist","pReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","redux","persistor","persistStore","ReactDOM","StrictMode","StyledEngineProvider","document","getElementById","API_URL","GOOGLE_API_KEY","ajaxGet","url","cb","j","substr","length","indexOf","axios","get","response","catch","error","console","log","ajaxPost","headers","post","getYoutubeInfo","code","a","statistics","snippet","obj","c","res","items","st","sn","x","localized","types","closeLoading","Types","openLoading","showMessage","actions","userLogin","user","rs","Date","getTime","Math","random","variant","userLogout","userRegister","userMe","shareAdd","share","shareList","setParams","setStart","Object","keys","Array","isArray","join","getParamsAsObject","query","substring","e","re","decodeRE","decode","str","decodeURIComponent","replace","exec","k","v","assign","keyPath","value","lastKeyIndex","prop","structure","split","levels","item"],"mappings":"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","file":"static/js/main.7d4e719b.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useSnackbar} from 'notistack'\r\nimport allActions from '../store/actions'\r\n\r\nlet displayed = []\r\n\r\nconst useNotifier = () => {\r\n    const dispatch = useDispatch()\r\n    const notifications = useSelector(state => state.commons.notifications || [])\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar()\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id]\r\n    }\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)]\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({key, message, options = {\r\n                anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }\r\n            }, dismissed = false}) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key)\r\n                return\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey)\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // remove this snackbar from redux store\r\n                    dispatch(allActions.commons.closeMessage(myKey))\r\n                    removeDisplayed(myKey)\r\n                },\r\n            })\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key)\r\n        })\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch])\r\n}\r\n\r\nexport default useNotifier\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@mui/styles';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1301,\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: \"10px\"\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| Loader ||=========================== //\r\n\r\nconst Loader = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgress color=\"primary\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Suspense } from 'react';\r\n\r\n// project imports\r\nimport Loader from './Loader';\r\n\r\n// ===========================|| LOADABLE - LAZY LOADING ||=========================== //\r\n\r\nconst Loadable = (Component) => (props) =>\r\n    (\r\n        <Suspense fallback={<Loader />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    );\r\n\r\nexport default Loadable;\r\n","import {lazy} from 'react'\r\nimport Loadable from \"../../src/layout/ui-component/Loadable\"\r\nconst Login = Loadable(lazy(() => import('../views/pages/login/Login')))\r\nconst Page404 = Loadable(lazy(() => import('../views/pages/page404/Page404')))\r\nconst Page500 = Loadable(lazy(() => import('../views/pages/page500/Page500')))\r\nconst Index = Loadable(lazy(() => import('../views/pages/dashboard/index')))\r\nconst UsersAdd = Loadable(lazy(() => import('../views/pages/users/Add')))\r\n// ===========================|| MAIN ROUTING ||=========================== //\r\n\r\nconst MainRoutes = [\r\n    {\r\n        path: '/',\r\n        title: \"Home Page\",\r\n        component: Index,\r\n    },\r\n    {\r\n        path: '/register',\r\n        title: \"Register\",\r\n        component: UsersAdd\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        title: \"Login\",\r\n        component: Login\r\n    },\r\n    {\r\n        path: \"/404\",\r\n        title: \"Page not found\",\r\n        component: Page404\r\n    },\r\n    {\r\n        path: \"/500\",\r\n        title: \"Internal Server Error\",\r\n        component: Page500\r\n    }\r\n];\r\n\r\nexport default MainRoutes;\r\n","import { lazy } from 'react';\r\nimport Loadable from \"../../src/layout/ui-component/Loadable\"\r\n\r\nconst ShareAdd = Loadable(lazy(() => import('../views/pages/shares/Add')))\r\n\r\n// ===========================|| AUTHENTICATION ROUTING ||=========================== //\r\n\r\nconst AuthenticationRoutes = [\r\n    {\r\n        path: '/share/add',\r\n        title: \"Share Video\",\r\n        component: ShareAdd\r\n    }\r\n];\r\n\r\nexport default AuthenticationRoutes;\r\n","// routes\r\nimport MainRoutes from './MainRoutes';\r\nimport AuthenticationRoutes from './AuthenticationRoutes';\r\n\r\nconst routes = [...AuthenticationRoutes, ...MainRoutes];\r\n// ===========================|| ROUTING RENDER ||=========================== //\r\n\r\nexport default routes;","import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport useNotifier from './hooks/useNotifer'\r\n//import cac page can\r\nimport pageRoutes from '../src/routes/index'\r\n// console.log(pageRoutes)\r\n// call APP\r\nfunction App() {\r\n    useNotifier();\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {pageRoutes.map((route, i) => (\r\n                    <Route\r\n                        key = {i}\r\n                        path={route.path}\r\n                        exact\r\n                        name = {route.title}\r\n                        render={props => (\r\n                            // pass the sub-routes down to keep nesting\r\n                            <route.component {...props} />\r\n                        )}\r\n                    />\r\n                ))}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// action - state management\r\nimport actionTypes from '../types/index'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    notifications:[]\r\n}\r\n\r\n// ===========================|| CUSTOMIZATION REDUCER ||=========================== //\r\n\r\nconst commonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.OPEN_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.CLOSE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actionTypes.SHOW_MESSAGE:\r\n            let ms = []\r\n            return {\r\n                ...state,\r\n                notifications: ms.concat(state.notifications, action.payload)\r\n            }\r\n        case actionTypes.REMOVE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(i=> i.key !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default commonsReducer\r\n","// action - state management\r\nimport actionTypes from \"../types/index\"\r\nimport {persistReducer} from \"redux-persist\"\r\nimport storage from \"redux-persist/lib/storage\"\r\n\r\nexport const initialState = {\r\n    currentUser: null,\r\n    isLoggingIn: false\r\n}\r\n\r\n// ===========================|| CUSTOMIZATION REDUCER ||=========================== //\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload ?? null,\r\n                isLoggingIn: !!action.payload.user_id\r\n            }\r\n        case actionTypes.USER_REGISTER:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.USER_LOGOUT:\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                isLoggingIn: false\r\n            }\r\n        case actionTypes.USER_ME:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload ?? null,\r\n                isLoggingIn: !!action.payload?.user_id\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst persistConfig = {\r\n    key: \"user\",\r\n    storage: storage,\r\n    blacklist: [\"isLoggingIn\"]\r\n}\r\n\r\nexport default persistReducer(persistConfig, usersReducer)\r\n","// action - state management\r\nimport actionTypes from \"../types/index\"\r\nimport {convertParams} from \"../../utils/url\"\r\n\r\nconst INITIAL_STATE = {\r\n    data: null,\r\n    params: {\r\n        page: 1,\r\n        sort: {\r\n            timestamp: 1\r\n        }\r\n    },\r\n    startParams: true\r\n}\r\n\r\nconst ShareReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHARE_ADD:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.SHARE_START:\r\n            return {\r\n                ...state,\r\n                startParams: true\r\n            }\r\n        case actionTypes.SHARE_VIDEO_LISTING:\r\n            return {\r\n                ...state,\r\n                data: action.payload[0] ?? [],\r\n                params: action.payload[1] ?? state.params,\r\n                startParams: false\r\n            };\r\n\r\n        case actionTypes.SHARE_PARAMS:\r\n            let params = {\r\n                ...state,\r\n                params: action.payload,\r\n                startParams: true\r\n            }\r\n            if(action.history && typeof action.history === \"object\"){\r\n                let par = {...params.params}\r\n                delete par.total\r\n                delete par.loading\r\n                action.history.push({\r\n                    search: convertParams(par)\r\n                })\r\n            }\r\n            return params\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ShareReducer","import commonsReducer from \"./commonsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport shareReducer from \"./shareReducer\";\r\n\r\nconst reducers = {\r\n    commons: commonsReducer,\r\n    users: usersReducer,\r\n    shares: shareReducer\r\n}\r\nexport default reducers","import { combineReducers } from 'redux';\r\n\r\n// reducer import\r\nimport customizationReducer from './reducers/index';\r\n\r\n// ===========================|| COMBINE REDUCER ||=========================== //\r\n\r\nconst reducer = combineReducers({\r\n    ...customizationReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport  thunk  from  'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n// ===========================|| REDUX - MAIN STORE ||=========================== //\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n    whitelist: ['user']\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst store = createStore(pReducer,  composeWithDevTools(applyMiddleware(thunk)));\r\nconst persistor = persistStore(store);\r\n\r\nconst redux = {store, persistor}\r\nexport default redux\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../src/assets/scss/style.scss'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {Provider} from 'react-redux'\r\nimport redux from './store/index'\r\nimport {StyledEngineProvider} from '@mui/material/styles'\r\nimport { SnackbarProvider } from 'notistack';\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={redux.store}>\r\n            <SnackbarProvider>\r\n                <StyledEngineProvider>\r\n                    <App/>\r\n                </StyledEngineProvider>\r\n            </SnackbarProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// theme constant\r\nexport const gridSpacing = 3;\r\nexport const drawerWidth = 260;\r\nexport const appDrawerWidth = 320;\r\nexport const API_URL = \"http://localhost:4000/api/v1/\";\r\nexport const API_SECRET_KEY = \"\";\r\nexport const GOOGLE_API_KEY = \"AIzaSyDgC_429mOIWC-bzaNWZhXFZ4fyX95gEh0\";","import axios from \"axios\"\r\nimport {API_URL, API_SECRET_KEY, GOOGLE_API_KEY} from \"./constant\"\r\n\r\nexport const ajaxGet = (url, data = null, cb = null) => {\r\n    url = API_URL + url\r\n    let params = \"\"\r\n    if (data) {\r\n        for (const i in data) {\r\n            if (typeof data[i] === \"object\") {\r\n                for (const j in data[i]) {\r\n                    params += `${i}[${j}]=${data[i][j]}&`\r\n                }\r\n            } else {\r\n                params += `${i}=${data[i]}&`\r\n            }\r\n\r\n        }\r\n    }\r\n    if (params !== \"\") {\r\n        params = params.substr(0, params.length - 1)\r\n    }\r\n    if (url.indexOf(\"?\") > -1) {\r\n        url += \"&\" + params\r\n    } else {\r\n        url += \"?\" + params\r\n    }\r\n\r\n    return axios.get(url)\r\n        .then(function (response) {\r\n            // handle success\r\n            if (cb && typeof cb === \"function\") {\r\n                cb(response)\r\n            }\r\n            return response.data\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error)\r\n            return false\r\n        })\r\n}\r\n\r\nexport const ajaxPost = (url, data = {}, cb = null) => {\r\n    url = API_URL + url\r\n    let headers = {}\r\n    if (API_SECRET_KEY !== \"\") {\r\n        headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Brear \" + API_SECRET_KEY\r\n        }\r\n    }\r\n    return axios.post(url, data, headers)\r\n        .then(function (response) {\r\n            // handle success\r\n            if (cb && typeof cb === \"function\") {\r\n                cb(response)\r\n            }\r\n            return response.data\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error)\r\n            return false\r\n        })\r\n}\r\n\r\nexport const getYoutubeInfo = async (code) => {\r\n    let statistics = `https://www.googleapis.com/youtube/v3/videos?part=statistics&key=${GOOGLE_API_KEY}`\r\n    let snippet = `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${GOOGLE_API_KEY}`\r\n    let obj = {\r\n        statistics: {},\r\n        snippet: {}\r\n    }\r\n    for (let c of code){\r\n        statistics += `&id=${c}`\r\n        snippet += `&id=${c}`\r\n    }\r\n    let st = await axios.get(statistics).then(res => res.data.items)\r\n    let sn = await axios.get(snippet).then(res => res.data.items)\r\n    for(let i in st){\r\n        obj.statistics[st[i].id] = st[i].statistics\r\n    }\r\n    for(let x in sn){\r\n        obj.snippet[sn[x].id] = sn[x].snippet?.localized\r\n    }\r\n    return obj\r\n}","export const OPEN_LOADING = '@loading/open';\r\nexport const CLOSE_LOADING = '@loading/close';\r\nexport const SHOW_MESSAGE = '@message/open';\r\nexport const REMOVE_MESSAGE = '@message/close';","// action - customization reducer\r\nexport const USER_LOGIN = \"@users/LOGIN\"\r\nexport const USER_REGISTER = \"@users/REGISTER\"\r\nexport const USER_LOGOUT = \"@users/LOGOUT\"\r\nexport const USER_ME = \"@users/ME\"","// action - customization reducer\r\nexport const SHARE_VIDEO_LISTING = \"@share/VIDEOS_LISTING\"\r\nexport const SHARE_ADD = \"@share/ADD\"\r\nexport const SHARE_PARAMS = \"@share/PARAMS\"\r\nexport const SHARE_START = \"@share/START\"","import * as commons from './commons';\r\nimport * as users from './users';\r\nimport * as shares from './shares';\r\n\r\nconst types = {\r\n    ...commons,\r\n    ...users,\r\n    ...shares\r\n};\r\nexport default types","import Types from \"../types\"\r\n\r\nconst closeLoading = () => {\r\n    return {\r\n        type: Types.CLOSE_LOADING\r\n    }\r\n}\r\n\r\nconst openLoading = () => {\r\n    return {\r\n        type: Types.OPEN_LOADING\r\n    }\r\n}\r\n\r\nconst showMessage = (params) => {\r\n    return {\r\n        type: Types.SHOW_MESSAGE,\r\n        payload: params\r\n    }\r\n}\r\n\r\n\r\nconst closeMessage = (key) => {\r\n    return {\r\n        type: Types.REMOVE_MESSAGE,\r\n        payload: key\r\n    }\r\n}\r\n\r\nlet commons = {\r\n    closeLoading,\r\n    openLoading,\r\n    showMessage,\r\n    closeMessage\r\n}\r\n\r\nexport default commons","import Types from \"../types\"\r\nimport allActions from \"./index\"\r\nimport {ajaxPost} from \"../ajax\"\r\n\r\nconst userLogin = (params) => {\r\n    return async dispatch =>{\r\n        if(params.loading) dispatch(allActions.commons.openLoading());\r\n        let data = await ajaxPost(\"login\", params.user)\r\n        if(params.loading) dispatch(allActions.commons.closeLoading());\r\n        let rs = []\r\n        if(data && data[\"status\"] !== 200){\r\n            dispatch(allActions.commons.showMessage({\r\n                key: new Date().getTime() + Math.random(),\r\n                options: {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }\r\n                },\r\n                message: data[\"message\"]\r\n            }))\r\n        }\r\n        if(data && data[\"data\"]){\r\n            rs = data[\"data\"];\r\n        }\r\n        return dispatch({\r\n            type: Types.USER_LOGIN,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\nconst userLogout = (params = null) => {\r\n    return async dispatch =>{\r\n        if(params.loading) dispatch(allActions.commons.openLoading());\r\n        let data = await ajaxPost(\"logout\", {})\r\n        if(params.loading) dispatch(allActions.commons.closeLoading());\r\n        let rs = []\r\n\r\n        if(data && data[\"data\"]){\r\n            rs = data[\"data\"];\r\n        }\r\n\r\n        return dispatch({\r\n            type: Types.USER_LOGOUT,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\nconst userRegister = (params, history = null) => {\r\n    return async dispatch =>{\r\n        if(params.loading) dispatch(allActions.commons.openLoading());\r\n        let data = await ajaxPost(\"register\", params.user)\r\n        if(params.loading) dispatch(allActions.commons.closeLoading());\r\n        let rs = []\r\n        if(data && data[\"status\"] !== 200){\r\n            dispatch(allActions.commons.showMessage({\r\n                key: new Date().getTime() + Math.random(),\r\n                options: {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }\r\n                },\r\n                message: data[\"message\"]\r\n            }))\r\n        }\r\n        if(data && data[\"data\"]){\r\n            rs = data[\"data\"];\r\n            dispatch(allActions.commons.showMessage({\r\n                key: new Date().getTime() + Math.random(),\r\n                options: {\r\n                    variant: \"success\",\r\n                    anchorOrigin: {\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }\r\n                },\r\n                message: data[\"message\"]\r\n            }))\r\n            if(history){\r\n                history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        return dispatch({\r\n            type: Types.USER_REGISTER,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\nconst userMe = () => {\r\n    return async dispatch =>{\r\n        let data = await ajaxPost(\"me\")\r\n        let rs = []\r\n        if(data && data[\"data\"]){\r\n            rs = data[\"data\"];\r\n        }\r\n        return dispatch({\r\n            type: Types.USER_ME,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\n\r\nlet actions = {\r\n    userLogin,\r\n    userLogout,\r\n    userRegister,\r\n    userMe\r\n}\r\nexport default actions","import Types from \"../types\"\r\nimport allActions from \"./index\"\r\nimport {ajaxGet, ajaxPost} from \"../ajax\"\r\n\r\nconst shareAdd = (params, history = null) => {\r\n    return async dispatch => {\r\n        if (params.loading) dispatch(allActions.commons.openLoading())\r\n        let data = await ajaxPost(\"share/add\", params.share)\r\n        if (params.loading) dispatch(allActions.commons.closeLoading())\r\n        let rs = []\r\n        if(data && data[\"status\"] !== 200){\r\n            dispatch(allActions.commons.showMessage({\r\n                key: new Date().getTime() + Math.random(),\r\n                options: {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }\r\n                },\r\n                message: data[\"message\"]\r\n            }))\r\n        }\r\n        if (data && data[\"data\"]) {\r\n            rs = data[\"data\"]\r\n            dispatch(allActions.commons.showMessage({\r\n                key: new Date().getTime() + Math.random(),\r\n                options: {\r\n                    variant: \"success\",\r\n                    anchorOrigin: {\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }\r\n                },\r\n                message: data[\"message\"]\r\n            }))\r\n            if(history){\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n\r\n        return dispatch({\r\n            type: Types.SHARE_ADD,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\nconst shareList = (params) => {\r\n    return async dispatch => {\r\n        if (params.loading) dispatch(allActions.commons.openLoading())\r\n        let data = await ajaxGet(\"shares\", params)\r\n        let rs = []\r\n        if (data && data[\"data\"]) {\r\n            rs = data[\"data\"]\r\n        }\r\n        if (params.loading) dispatch(allActions.commons.closeLoading())\r\n        return dispatch({\r\n            type: Types.SHARE_VIDEO_LISTING,\r\n            payload: rs\r\n        })\r\n    }\r\n}\r\n\r\nconst setParams = (params, history = null) => {\r\n    return {\r\n        type: Types.SHARE_PARAMS,\r\n        payload: params,\r\n        history: history\r\n    }\r\n}\r\n\r\nconst setStart = () => {\r\n    return {\r\n        type: Types.SHARE_START\r\n    }\r\n}\r\n\r\nlet actions = {\r\n    shareAdd,\r\n    shareList,\r\n    setParams,\r\n    setStart\r\n}\r\n\r\nexport default actions","import commons from './commons';\r\nimport users from './users';\r\nimport shares from './shares';\r\n\r\nconst actions = {\r\n    commons,\r\n    users,\r\n    shares\r\n};\r\nexport default actions","export const convertParams = (params) => {\r\n    return Object.keys(params).map(key => {\r\n        if(Array.isArray(params[key])){\r\n            return key + '=' + params[key].join(\",\")\r\n        }else{\r\n            if(params[key] && typeof params[key] === \"object\"){\r\n                let obj = params[key]\r\n                return Object.keys(obj).map(i => `${key}[${i}]=${obj[i]}`).join(\"&\")\r\n            }\r\n            return key + '=' + params[key]\r\n        }\r\n    }).join('&')\r\n}\r\n\r\nexport const getParamsAsObject = (query) => {\r\n\r\n    query = query.substring(query.indexOf('?') + 1);\r\n\r\n    let re = /([^&=]+)=?([^&]*)/g;\r\n    let decodeRE = /\\+/g;\r\n\r\n    let decode = function (str) {\r\n        return decodeURIComponent(str.replace(decodeRE, \" \"));\r\n    };\r\n\r\n    let params = {}, e;\r\n    e = re.exec(query);\r\n    while (e) {\r\n        let k = decode(e[1]), v = decode(e[2]);\r\n        if (k.substring(k.length - 2) === '[]') {\r\n            k = k.substring(0, k.length - 2);\r\n            (params[k] || (params[k] = [])).push(v);\r\n        }\r\n        else params[k] = v;\r\n        e = re.exec(query);\r\n    }\r\n\r\n    let assign = function (obj, keyPath, value) {\r\n        let lastKeyIndex = keyPath.length - 1;\r\n        for (let i = 0; i < lastKeyIndex; ++i) {\r\n            let key = keyPath[i];\r\n            if (!(key in obj))\r\n                obj[key] = {}\r\n            obj = obj[key];\r\n        }\r\n        obj[keyPath[lastKeyIndex]] = value;\r\n    }\r\n\r\n    for (let prop in params) {\r\n        let structure = prop.split('[');\r\n        if (structure.length > 1) {\r\n            let levels = [];\r\n            structure.forEach(function (item, i) {\r\n                let key = item.replace(/[?[\\]\\\\ ]/g, '');\r\n                levels.push(key);\r\n            });\r\n            assign(params, levels, params[prop]);\r\n            delete(params[prop]);\r\n        }\r\n    }\r\n    return params;\r\n};"],"sourceRoot":""}